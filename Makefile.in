
ifeq (tests,$(firstword $(MAKECMDGOALS)))
  TESTS_ARGS := $(wordlist 2,$(words $(MAKECMDGOALS)),$(MAKECMDGOALS))
  $(eval $(TESTS_ARGS):;@:)
endif

ifeq ($(OS), Windows_NT)
	EXT=.exe
else
	EXT=""
endif

all: compile install

compile: setup
	dune build --profile release @install
	dune build --profile release @test

setup: version zsolver
	cp src/interface/mathkernel_call.ml src/interface/mathkernel_call_.ml
	echo "(* dummy js interface *)" >> src/js/helper_.ml

version:
	echo "let git = \"`git describe --tags` (`git rev-parse HEAD`)\n`uname -m -o` `date +\"%Y-%m-%d %H:%M\"`\"" > src/version.ml

tests:
	dune runtest --profile release
	mkdir -p _build_tests && cp -R unittests/* _build_tests && cd _build_tests && bash -ex test.sh $(TESTS_ARGS)

clean-tests:
	rm _build_tests -r -f

install:
	@echo "OS: ${OS}"
	@echo "Installing rmtld3synth to ${PREFIX}/bin; dune may modify the default path."
	dune install

uninstall:
	dune uninstall


clean:
	dune clean
	rm -f *.byte *.native
	rm -f src/interface/z3solver_.ml src/interface/mathkernel_call_.ml src/js/helper_.ml version.ml
	cp src/interface/dune.bak src/interface/dune
	cp src/js/dune.bak src/js/dune
